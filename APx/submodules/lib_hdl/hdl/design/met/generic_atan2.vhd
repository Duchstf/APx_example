-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity generic_atan2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in1_V : IN STD_LOGIC_VECTOR (19 downto 0);
    in2_V : IN STD_LOGIC_VECTOR (19 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (50 downto 0) );
end;


architecture behav of generic_atan2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv51_0 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000000000";
    constant ap_const_lv51_3243F6A8885A3 : STD_LOGIC_VECTOR (50 downto 0) := "011001001000011111101101010100010001000010110100011";
    constant ap_const_lv51_1921FB54442D1 : STD_LOGIC_VECTOR (50 downto 0) := "001100100100001111110110101010001000100001011010001";
    constant ap_const_lv51_66DE04ABBBD2E : STD_LOGIC_VECTOR (50 downto 0) := "110011011011110000001001010101110111011110100101110";
    constant ap_const_lv51_C90FDAA22168 : STD_LOGIC_VECTOR (50 downto 0) := "000110010010000111111011010101000100010000101101000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv51_5A4D070199BC5 : STD_LOGIC_VECTOR (50 downto 0) := "101101001001101000001110000000110011001101111000101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv58_C90FDAA22168C0 : STD_LOGIC_VECTOR (57 downto 0) := "0011001001000011111101101010100010001000010110100011000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv58_26DE04ABBBD2E80 : STD_LOGIC_VECTOR (57 downto 0) := "1001101101111000000100101010111011101111010010111010000000";
    constant ap_const_lv58_1921FB54442D180 : STD_LOGIC_VECTOR (57 downto 0) := "0110010010000111111011010101000100010000101101000110000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal cordic_apfixed_circ_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal cordic_apfixed_circ_ce0 : STD_LOGIC;
    signal cordic_apfixed_circ_q0 : STD_LOGIC_VECTOR (125 downto 0);
    signal p_Val2_31_reg_107 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Val2_29_reg_117 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Val2_35_reg_127 : STD_LOGIC_VECTOR (57 downto 0);
    signal ush_reg_139 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1494_fu_185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal signin1_V_fu_201_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal signin1_V_reg_569 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1494_2_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_2_reg_576 : STD_LOGIC_VECTOR (0 downto 0);
    signal signin2_V_fu_225_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal signin2_V_reg_582 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln606_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln606_reg_589 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln879_3_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_reg_593 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln610_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln610_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln614_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln614_reg_602 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_reg_606 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln618_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln618_reg_611 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1498_3_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1498_3_reg_615 : STD_LOGIC_VECTOR (0 downto 0);
    signal in1abs_V_fu_284_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal in1abs_V_reg_619 : STD_LOGIC_VECTOR (19 downto 0);
    signal in2abs_V_fu_296_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal in2abs_V_reg_625 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln1494_3_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_3_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln627_fu_309_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln203_fu_335_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln203_1_fu_347_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal icmp_ln87_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_653 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal n_fu_357_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal n_reg_657 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal r_V_11_fu_367_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal r_V_11_reg_662 : STD_LOGIC_VECTOR (57 downto 0);
    signal r_V_12_fu_373_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal r_V_12_reg_668 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_30_reg_679 : STD_LOGIC_VECTOR (54 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_49_fu_394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_684 : STD_LOGIC_VECTOR (0 downto 0);
    signal ty_V_fu_422_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal ty_V_reg_689 : STD_LOGIC_VECTOR (57 downto 0);
    signal tx_V_fu_430_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal tx_V_reg_694 : STD_LOGIC_VECTOR (57 downto 0);
    signal tz_V_fu_453_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal z_V_3_fu_466_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal z_V_3_reg_704 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal and_ln679_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln679_reg_712 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln682_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln682_reg_716 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln685_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln685_reg_720 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_p_Val2_31_phi_fu_110_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_p_Val2_29_phi_fu_120_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_phi_mux_ush_phi_fu_143_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_UnifiedRetVal_phi_fu_158_p20 : STD_LOGIC_VECTOR (50 downto 0);
    signal UnifiedRetVal_reg_150 : STD_LOGIC_VECTOR (50 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln99_fu_379_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1498_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln599_fu_197_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1498_2_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln600_fu_221_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_279_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_fu_291_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_33_fu_317_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_fu_327_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_34_fu_322_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_s_fu_339_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln1299_fu_363_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal add_ln203_2_fu_417_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal sub_ln203_fu_407_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal sub_ln203_1_fu_412_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal add_ln203_fu_402_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal z_s_V_fu_438_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal sub_ln203_2_fu_447_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal add_ln203_1_fu_441_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal z_V_fu_460_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal or_ln682_fu_477_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_13_fu_501_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal ret_V_2_fu_517_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal ret_V_fu_533_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_546 : BOOLEAN;
    signal ap_condition_549 : BOOLEAN;
    signal ap_condition_543 : BOOLEAN;

    component generic_atan2_coreOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (125 downto 0) );
    end component;



begin
    cordic_apfixed_circ_U : component generic_atan2_coreOg
    generic map (
        DataWidth => 126,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cordic_apfixed_circ_address0,
        ce0 => cordic_apfixed_circ_ce0,
        q0 => cordic_apfixed_circ_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv51_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_158_p20;
                end if; 
            end if;
        end if;
    end process;


    UnifiedRetVal_reg_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1498_3_reg_615 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln618_reg_611) and (ap_const_lv1_0 = and_ln614_reg_602) and (ap_const_lv1_0 = and_ln610_reg_598) and (icmp_ln682_reg_716 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln679_reg_712) and (ap_const_lv1_0 = and_ln606_reg_589) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = and_ln685_reg_720))) then 
                UnifiedRetVal_reg_150 <= r_V_13_fu_501_p2(57 downto 7);
            elsif (((icmp_ln1498_3_reg_615 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln618_reg_611) and (ap_const_lv1_0 = and_ln614_reg_602) and (ap_const_lv1_0 = and_ln610_reg_598) and (ap_const_lv1_0 = and_ln685_reg_720) and (icmp_ln682_reg_716 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln679_reg_712) and (ap_const_lv1_0 = and_ln606_reg_589) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                UnifiedRetVal_reg_150 <= z_V_3_reg_704(57 downto 7);
            elsif (((icmp_ln1498_3_reg_615 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln618_reg_611) and (ap_const_lv1_0 = and_ln614_reg_602) and (ap_const_lv1_0 = and_ln610_reg_598) and (ap_const_lv1_0 = and_ln679_reg_712) and (ap_const_lv1_0 = and_ln606_reg_589) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln682_reg_716 = ap_const_lv1_1))) then 
                UnifiedRetVal_reg_150 <= ret_V_2_fu_517_p2(57 downto 7);
            elsif (((icmp_ln1498_3_reg_615 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln618_reg_611) and (ap_const_lv1_0 = and_ln614_reg_602) and (ap_const_lv1_0 = and_ln610_reg_598) and (ap_const_lv1_0 = and_ln606_reg_589) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = and_ln679_reg_712))) then 
                UnifiedRetVal_reg_150 <= ret_V_fu_533_p2(57 downto 7);
            elsif (((icmp_ln1498_3_fu_275_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln618_fu_269_p2) and (ap_const_lv1_0 = and_ln614_fu_259_p2) and (ap_const_lv1_0 = and_ln610_fu_248_p2) and (ap_const_lv1_0 = and_ln606_fu_238_p2) and (icmp_ln1494_reg_563 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                UnifiedRetVal_reg_150 <= ap_const_lv51_C90FDAA22168;
            elsif (((ap_const_lv1_1 = and_ln618_fu_269_p2) and (ap_const_lv1_0 = and_ln614_fu_259_p2) and (ap_const_lv1_0 = and_ln610_fu_248_p2) and (ap_const_lv1_0 = and_ln606_fu_238_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                UnifiedRetVal_reg_150 <= ap_const_lv51_66DE04ABBBD2E;
            elsif (((ap_const_lv1_1 = and_ln614_fu_259_p2) and (ap_const_lv1_0 = and_ln610_fu_248_p2) and (ap_const_lv1_0 = and_ln606_fu_238_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                UnifiedRetVal_reg_150 <= ap_const_lv51_1921FB54442D1;
            elsif (((ap_const_lv1_1 = and_ln610_fu_248_p2) and (ap_const_lv1_0 = and_ln606_fu_238_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                UnifiedRetVal_reg_150 <= ap_const_lv51_3243F6A8885A3;
            elsif (((ap_const_lv1_1 = and_ln606_fu_238_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                UnifiedRetVal_reg_150 <= ap_const_lv51_0;
            elsif (((icmp_ln1498_3_fu_275_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln618_fu_269_p2) and (ap_const_lv1_0 = and_ln614_fu_259_p2) and (ap_const_lv1_0 = and_ln610_fu_248_p2) and (ap_const_lv1_0 = and_ln606_fu_238_p2) and (icmp_ln1494_reg_563 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                UnifiedRetVal_reg_150 <= select_ln627_fu_309_p3;
            end if; 
        end if;
    end process;

    p_Val2_29_reg_117_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_reg_653 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_Val2_29_reg_117 <= ty_V_reg_689;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_Val2_29_reg_117 <= sext_ln203_1_fu_347_p1;
            end if; 
        end if;
    end process;

    p_Val2_31_reg_107_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_reg_653 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_Val2_31_reg_107 <= tx_V_reg_694;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_Val2_31_reg_107 <= sext_ln203_fu_335_p1;
            end if; 
        end if;
    end process;

    p_Val2_35_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_reg_653 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_Val2_35_reg_127 <= tz_V_fu_453_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_Val2_35_reg_127 <= ap_const_lv58_0;
            end if; 
        end if;
    end process;

    ush_reg_139_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_reg_653 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ush_reg_139 <= n_reg_657;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                ush_reg_139 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                and_ln606_reg_589 <= and_ln606_fu_238_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln606_fu_238_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                and_ln610_reg_598 <= and_ln610_fu_248_p2;
                icmp_ln879_3_reg_593 <= icmp_ln879_3_fu_243_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln610_fu_248_p2) and (ap_const_lv1_0 = and_ln606_fu_238_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                and_ln614_reg_602 <= and_ln614_fu_259_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln614_fu_259_p2) and (ap_const_lv1_0 = and_ln610_fu_248_p2) and (ap_const_lv1_0 = and_ln606_fu_238_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                and_ln618_reg_611 <= and_ln618_fu_269_p2;
                icmp_ln879_5_reg_606 <= icmp_ln879_5_fu_264_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                and_ln679_reg_712 <= and_ln679_fu_473_p2;
                z_V_3_reg_704 <= z_V_3_fu_466_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln682_fu_481_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln679_fu_473_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                and_ln685_reg_720 <= and_ln685_fu_487_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                icmp_ln1494_2_reg_576 <= icmp_ln1494_2_fu_209_p2;
                icmp_ln1494_reg_563 <= icmp_ln1494_fu_185_p2;
                signin1_V_reg_569 <= signin1_V_fu_201_p3;
                signin2_V_reg_582 <= signin2_V_fu_225_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1498_3_fu_275_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln618_fu_269_p2) and (ap_const_lv1_0 = and_ln614_fu_259_p2) and (ap_const_lv1_0 = and_ln610_fu_248_p2) and (ap_const_lv1_0 = and_ln606_fu_238_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln1494_3_reg_631 <= icmp_ln1494_3_fu_303_p2;
                in1abs_V_reg_619 <= in1abs_V_fu_284_p3;
                in2abs_V_reg_625 <= in2abs_V_fu_296_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln618_fu_269_p2) and (ap_const_lv1_0 = and_ln614_fu_259_p2) and (ap_const_lv1_0 = and_ln610_fu_248_p2) and (ap_const_lv1_0 = and_ln606_fu_238_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln1498_3_reg_615 <= icmp_ln1498_3_fu_275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln679_fu_473_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                icmp_ln682_reg_716 <= icmp_ln682_fu_481_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln87_reg_653 <= icmp_ln87_fu_351_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                n_reg_657 <= n_fu_357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_fu_351_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_11_reg_662 <= r_V_11_fu_367_p2;
                r_V_12_reg_668 <= r_V_12_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_reg_653 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_30_reg_679 <= cordic_apfixed_circ_q0(125 downto 71);
                tmp_49_reg_684 <= p_Val2_29_reg_117(57 downto 57);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_reg_653 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tx_V_reg_694 <= tx_V_fu_430_p3;
                ty_V_reg_689 <= ty_V_fu_422_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, and_ln606_fu_238_p2, ap_CS_fsm_state2, and_ln610_fu_248_p2, and_ln614_fu_259_p2, and_ln618_fu_269_p2, icmp_ln1498_3_fu_275_p2, icmp_ln87_fu_351_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1498_3_fu_275_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln618_fu_269_p2) and (ap_const_lv1_0 = and_ln614_fu_259_p2) and (ap_const_lv1_0 = and_ln610_fu_248_p2) and (ap_const_lv1_0 = and_ln606_fu_238_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln87_fu_351_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln87_fu_351_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln203_1_fu_441_p2 <= std_logic_vector(unsigned(p_Val2_35_reg_127) + unsigned(z_s_V_fu_438_p1));
    add_ln203_2_fu_417_p2 <= std_logic_vector(unsigned(r_V_11_reg_662) + unsigned(p_Val2_29_reg_117));
    add_ln203_fu_402_p2 <= std_logic_vector(unsigned(p_Val2_31_reg_107) + unsigned(r_V_12_reg_668));
    and_ln606_fu_238_p2 <= (icmp_ln879_fu_233_p2 and icmp_ln1494_2_reg_576);
    and_ln610_fu_248_p2 <= (icmp_ln879_fu_233_p2 and icmp_ln879_3_fu_243_p2);
    and_ln614_fu_259_p2 <= (icmp_ln879_4_fu_254_p2 and icmp_ln1494_reg_563);
    and_ln618_fu_269_p2 <= (icmp_ln879_5_fu_264_p2 and icmp_ln879_4_fu_254_p2);
    and_ln679_fu_473_p2 <= (icmp_ln879_3_reg_593 and icmp_ln1494_reg_563);
    and_ln685_fu_487_p2 <= (icmp_ln879_5_reg_606 and icmp_ln1494_2_reg_576);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_543_assign_proc : process(and_ln606_reg_589, and_ln610_reg_598, and_ln614_reg_602, and_ln618_reg_611, icmp_ln1498_3_reg_615, ap_CS_fsm_state8)
    begin
                ap_condition_543 <= ((icmp_ln1498_3_reg_615 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln618_reg_611) and (ap_const_lv1_0 = and_ln614_reg_602) and (ap_const_lv1_0 = and_ln610_reg_598) and (ap_const_lv1_0 = and_ln606_reg_589) and (ap_const_logic_1 = ap_CS_fsm_state8));
    end process;


    ap_condition_546_assign_proc : process(and_ln679_reg_712, icmp_ln682_reg_716, and_ln685_reg_720)
    begin
                ap_condition_546 <= ((ap_const_lv1_0 = and_ln685_reg_720) and (icmp_ln682_reg_716 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln679_reg_712));
    end process;


    ap_condition_549_assign_proc : process(and_ln679_reg_712, icmp_ln682_reg_716, and_ln685_reg_720)
    begin
                ap_condition_549 <= ((icmp_ln682_reg_716 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln679_reg_712) and (ap_const_lv1_1 = and_ln685_reg_720));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln87_fu_351_p2)
    begin
        if ((icmp_ln87_fu_351_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_UnifiedRetVal_phi_fu_158_p20_assign_proc : process(z_V_3_reg_704, and_ln679_reg_712, icmp_ln682_reg_716, UnifiedRetVal_reg_150, r_V_13_fu_501_p2, ret_V_2_fu_517_p2, ret_V_fu_533_p2, ap_condition_546, ap_condition_549, ap_condition_543)
    begin
        if ((ap_const_boolean_1 = ap_condition_543)) then
            if ((ap_const_boolean_1 = ap_condition_549)) then 
                ap_phi_mux_UnifiedRetVal_phi_fu_158_p20 <= r_V_13_fu_501_p2(57 downto 7);
            elsif ((ap_const_boolean_1 = ap_condition_546)) then 
                ap_phi_mux_UnifiedRetVal_phi_fu_158_p20 <= z_V_3_reg_704(57 downto 7);
            elsif (((ap_const_lv1_0 = and_ln679_reg_712) and (icmp_ln682_reg_716 = ap_const_lv1_1))) then 
                ap_phi_mux_UnifiedRetVal_phi_fu_158_p20 <= ret_V_2_fu_517_p2(57 downto 7);
            elsif ((ap_const_lv1_1 = and_ln679_reg_712)) then 
                ap_phi_mux_UnifiedRetVal_phi_fu_158_p20 <= ret_V_fu_533_p2(57 downto 7);
            else 
                ap_phi_mux_UnifiedRetVal_phi_fu_158_p20 <= UnifiedRetVal_reg_150;
            end if;
        else 
            ap_phi_mux_UnifiedRetVal_phi_fu_158_p20 <= UnifiedRetVal_reg_150;
        end if; 
    end process;


    ap_phi_mux_p_Val2_29_phi_fu_120_p4_assign_proc : process(p_Val2_29_reg_117, icmp_ln87_reg_653, ap_CS_fsm_pp0_stage0, ty_V_reg_689, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln87_reg_653 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_Val2_29_phi_fu_120_p4 <= ty_V_reg_689;
        else 
            ap_phi_mux_p_Val2_29_phi_fu_120_p4 <= p_Val2_29_reg_117;
        end if; 
    end process;


    ap_phi_mux_p_Val2_31_phi_fu_110_p4_assign_proc : process(p_Val2_31_reg_107, icmp_ln87_reg_653, ap_CS_fsm_pp0_stage0, tx_V_reg_694, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln87_reg_653 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_Val2_31_phi_fu_110_p4 <= tx_V_reg_694;
        else 
            ap_phi_mux_p_Val2_31_phi_fu_110_p4 <= p_Val2_31_reg_107;
        end if; 
    end process;


    ap_phi_mux_ush_phi_fu_143_p4_assign_proc : process(ush_reg_139, icmp_ln87_reg_653, ap_CS_fsm_pp0_stage0, n_reg_657, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln87_reg_653 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_ush_phi_fu_143_p4 <= n_reg_657;
        else 
            ap_phi_mux_ush_phi_fu_143_p4 <= ush_reg_139;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_UnifiedRetVal_phi_fu_158_p20, ap_CS_fsm_state8, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_return <= ap_phi_mux_UnifiedRetVal_phi_fu_158_p20;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    cordic_apfixed_circ_address0 <= zext_ln99_fu_379_p1(7 - 1 downto 0);

    cordic_apfixed_circ_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            cordic_apfixed_circ_ce0 <= ap_const_logic_1;
        else 
            cordic_apfixed_circ_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1494_2_fu_209_p2 <= "1" when (signed(in2_V) > signed(ap_const_lv20_0)) else "0";
    icmp_ln1494_3_fu_303_p2 <= "1" when (signed(in1abs_V_fu_284_p3) > signed(in2abs_V_fu_296_p3)) else "0";
    icmp_ln1494_fu_185_p2 <= "1" when (signed(in1_V) > signed(ap_const_lv20_0)) else "0";
    icmp_ln1498_2_fu_215_p2 <= "1" when (in2_V = ap_const_lv20_0) else "0";
    icmp_ln1498_3_fu_275_p2 <= "1" when (in1_V = in2_V) else "0";
    icmp_ln1498_fu_191_p2 <= "1" when (in1_V = ap_const_lv20_0) else "0";
    icmp_ln682_fu_481_p2 <= "1" when (or_ln682_fu_477_p2 = ap_const_lv2_0) else "0";
    icmp_ln879_3_fu_243_p2 <= "1" when (signin2_V_reg_582 = ap_const_lv2_0) else "0";
    icmp_ln879_4_fu_254_p2 <= "1" when (signin2_V_reg_582 = ap_const_lv2_1) else "0";
    icmp_ln879_5_fu_264_p2 <= "1" when (signin1_V_reg_569 = ap_const_lv2_0) else "0";
    icmp_ln879_fu_233_p2 <= "1" when (signin1_V_reg_569 = ap_const_lv2_1) else "0";
    icmp_ln87_fu_351_p2 <= "1" when (ap_phi_mux_ush_phi_fu_143_p4 = ap_const_lv6_3A) else "0";
    in1abs_V_fu_284_p3 <= 
        r_V_fu_279_p2 when (icmp_ln879_5_fu_264_p2(0) = '1') else 
        in1_V;
    in2abs_V_fu_296_p3 <= 
        r_V_10_fu_291_p2 when (icmp_ln879_3_fu_243_p2(0) = '1') else 
        in2_V;
    n_fu_357_p2 <= std_logic_vector(unsigned(ap_phi_mux_ush_phi_fu_143_p4) + unsigned(ap_const_lv6_1));
    or_ln682_fu_477_p2 <= (signin2_V_reg_582 or signin1_V_reg_569);
    p_Val2_33_fu_317_p3 <= 
        in1abs_V_reg_619 when (icmp_ln1494_3_reg_631(0) = '1') else 
        in2abs_V_reg_625;
    p_Val2_34_fu_322_p3 <= 
        in2abs_V_reg_625 when (icmp_ln1494_3_reg_631(0) = '1') else 
        in1abs_V_reg_619;
    r_V_10_fu_291_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(in2_V));
    r_V_11_fu_367_p2 <= std_logic_vector(shift_right(signed(ap_phi_mux_p_Val2_31_phi_fu_110_p4),to_integer(unsigned('0' & zext_ln1299_fu_363_p1(31-1 downto 0)))));
    r_V_12_fu_373_p2 <= std_logic_vector(shift_right(signed(ap_phi_mux_p_Val2_29_phi_fu_120_p4),to_integer(unsigned('0' & zext_ln1299_fu_363_p1(31-1 downto 0)))));
    r_V_13_fu_501_p2 <= std_logic_vector(unsigned(ap_const_lv58_0) - unsigned(z_V_3_reg_704));
    r_V_fu_279_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(in1_V));
    ret_V_2_fu_517_p2 <= std_logic_vector(unsigned(z_V_3_reg_704) + unsigned(ap_const_lv58_26DE04ABBBD2E80));
    ret_V_fu_533_p2 <= std_logic_vector(unsigned(ap_const_lv58_1921FB54442D180) - unsigned(z_V_3_reg_704));
    select_ln627_fu_309_p3 <= 
        ap_const_lv51_0 when (icmp_ln879_fu_233_p2(0) = '1') else 
        ap_const_lv51_5A4D070199BC5;
        sext_ln203_1_fu_347_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_339_p3),58));

        sext_ln203_fu_335_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_327_p3),58));

    signin1_V_fu_201_p3 <= 
        ap_const_lv2_2 when (icmp_ln1494_fu_185_p2(0) = '1') else 
        zext_ln599_fu_197_p1;
    signin2_V_fu_225_p3 <= 
        ap_const_lv2_2 when (icmp_ln1494_2_fu_209_p2(0) = '1') else 
        zext_ln600_fu_221_p1;
    sub_ln203_1_fu_412_p2 <= std_logic_vector(unsigned(p_Val2_31_reg_107) - unsigned(r_V_12_reg_668));
    sub_ln203_2_fu_447_p2 <= std_logic_vector(unsigned(p_Val2_35_reg_127) - unsigned(z_s_V_fu_438_p1));
    sub_ln203_fu_407_p2 <= std_logic_vector(unsigned(p_Val2_29_reg_117) - unsigned(r_V_11_reg_662));
    tmp_49_fu_394_p3 <= p_Val2_29_reg_117(57 downto 57);
    tmp_fu_327_p3 <= (p_Val2_33_fu_317_p3 & ap_const_lv5_0);
    tmp_s_fu_339_p3 <= (p_Val2_34_fu_322_p3 & ap_const_lv5_0);
    tx_V_fu_430_p3 <= 
        sub_ln203_1_fu_412_p2 when (tmp_49_fu_394_p3(0) = '1') else 
        add_ln203_fu_402_p2;
    ty_V_fu_422_p3 <= 
        add_ln203_2_fu_417_p2 when (tmp_49_fu_394_p3(0) = '1') else 
        sub_ln203_fu_407_p2;
    tz_V_fu_453_p3 <= 
        sub_ln203_2_fu_447_p2 when (tmp_49_reg_684(0) = '1') else 
        add_ln203_1_fu_441_p2;
    z_V_3_fu_466_p3 <= 
        z_V_fu_460_p2 when (icmp_ln1494_3_reg_631(0) = '1') else 
        p_Val2_35_reg_127;
    z_V_fu_460_p2 <= std_logic_vector(unsigned(ap_const_lv58_C90FDAA22168C0) - unsigned(p_Val2_35_reg_127));
    z_s_V_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_reg_679),58));
    zext_ln1299_fu_363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_ush_phi_fu_143_p4),58));
    zext_ln599_fu_197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1498_fu_191_p2),2));
    zext_ln600_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1498_2_fu_215_p2),2));
    zext_ln99_fu_379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_ush_phi_fu_143_p4),64));
end behav;
